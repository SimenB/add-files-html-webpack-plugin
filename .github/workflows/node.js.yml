name: Node.js CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - '**'

jobs:
  prepare-yarn-cache:
    name: Prepare yarn cache
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v2.1.4
        with:
          node-version: 14.x

      - name: Get yarn cache
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"

      - uses: actions/cache@v2.1.4
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: yarn2-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            yarn2-

      - name: Validate cache
        env:
          # Use PnP and disable postinstall scripts as this just needs to
          # populate the cache for the other jobs
          YARN_NODE_LINKER: pnp
          YARN_ENABLE_SCRIPTS: false
        run: yarn --immutable

  test-node:
    name: Test on Node.js v${{ matrix.node-version }} and html-webpack-plugin v${{ matrix.html-plugin-version }} and webpack v${{ matrix.webpack-version }}
    strategy:
      fail-fast: false
      matrix:
        node-version: [12.x, 14.x, 15.x]
        html-plugin-version: [3, 4, 5]
        webpack-version: [4, 5]
        exclude:
          # plugin@5 only supports webpack@5
          - html-plugin-version: 5
            webpack-version: 4
          # plugin@3 only supports webpack@4
          - html-plugin-version: 3
            webpack-version: 5
    runs-on: ubuntu-latest
    needs: prepare-yarn-cache

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Get yarn cache
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"
      - uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: yarn2-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            yarn2-
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: install with html-webpack-plugin v${{matrix.html-plugin-version }} and webpack v${{ matrix.webpack-version }}
        run: |
          yarn
          yarn add --dev html-webpack-plugin@${{matrix.html-plugin-version }} webpack@${{ matrix.webpack-version }}
          git checkout yarn.lock
      - run: yarn run example
      - name: run tests
        run: yarn cover
      - uses: codecov/codecov-action@v1
        if: ${{ always() }}
  test-os:
    name: Test on ${{ matrix.os }} using Node.js LTS
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
    runs-on: ${{ matrix.os }}
    needs: prepare-yarn-cache

    steps:
      - uses: actions/checkout@v2
      - name: Get yarn cache
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"
      - uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: yarn2-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            yarn2-
      - uses: actions/setup-node@v2.1.4
        with:
          node-version: 14.x
      - run: yarn
      - run: yarn run example
      - name: run tests
        run: yarn cover
  lint:
    name: Run ESLint using Node.js LTS
    runs-on: ubuntu-latest
    needs: prepare-yarn-cache

    steps:
      - uses: actions/checkout@v2
      - name: Get yarn cache
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"
      - uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: yarn2-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            yarn2-
      - uses: actions/setup-node@v2.1.4
        with:
          node-version: 14.x
      - run: yarn
      - run: yarn lint

  release:
    if: ${{ github.event_name == 'push' && github.event.ref == 'refs/heads/main' }}
    name: Release new version
    needs: [lint, test-node, test-os]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Get yarn cache
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"
      - uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: yarn2-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            yarn2-
      - uses: actions/setup-node@v2
        with:
          node-version: 14.x
      - name: install
        run: yarn
      - run: yarn semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
